package island.com.Animals.Predators;

import island.com.Map.Location;
import island.com.Plants.Plant;

import java.util.List;
import java.util.concurrent.ThreadLocalRandom;

public class Bear extends Predators{
    private static final double BASE_WEIGHT = 500.0; // –ë–∞–∑–æ–≤–∞ –≤–∞–≥–∞ –≤–∏–¥—É
    private static final int MAX_COUNT_PER_CELL = 5; // –ú–∞–∫—Å. –Ω–∞ –∫–ª—ñ—Ç–∏–Ω—Ü—ñ
    private static final int MAX_SPEED = 2; // –ú–∞–∫—Å. —à–≤–∏–¥–∫—ñ—Å—Ç—å (–∫–ª—ñ—Ç–∏–Ω–æ–∫ –∑–∞ —Ö—ñ–¥)
    private static final double FOOD_CAPACITY = 80.0; // –ü–æ—Ç—Ä—ñ–±–Ω–æ —ó–∂—ñ –¥–ª—è –Ω–∞—Å–∏—á–µ–Ω–Ω—è

    public Bear(int startX, int startY){
        super(startX, startY);
        setInitialSaturation(getFoodCapacity() * (0.5 + ThreadLocalRandom.current().nextDouble() * 0.5));
    }

    @Override
    public void eat(Location currentLocation) {
        super.eat(currentLocation);
        if(this.isAlive() && getCurrentSaturation() < getFoodCapacity()){
            eatPlants(currentLocation);
        }
        // –ù—É –≤–¥—Ä—É–≥ —É –Ω–∞—Å –º–∏—à–∫–∞ –Ω–µ –∑–º–æ–∂–µ –±—ñ–≥–∞—Ç–∏ –∑–∞ —à–≤–∏–¥–∫–∏–º–∏ –∫—Ä–æ–ª–∏–∫–∞–º–∏ —Ç–æ —Ö–∞–π —Å–ø—Ä–æ–±—É—î —Ç—Ä–∞–≤–∫—É –º–æ–∂–µ —Å–ø–æ–¥–æ–±–∞—î—Ç—å—Å—è =)
    }
    public void eatPlants(Location currentLocation){
        List<Plant> plantInLocation = currentLocation.getPlants();
        if(!plantInLocation.isEmpty()){
            Plant plantToEat  = plantInLocation.get(ThreadLocalRandom.current().nextInt(plantInLocation.size()));
            double foodWeight = plantToEat.getWeight();
            if(foodWeight <= 0){
                return;
            }
            double neededSaturation = FOOD_CAPACITY - getCurrentSaturation();
            double gainedSaturation = Math.min(neededSaturation, foodWeight);
            this.addSaturation(gainedSaturation);
            currentLocation.removePlants(plantToEat);
            System.out.println(this.getSymbol() + " ate " + plantToEat.getSymbol() + " (plant) at (" + this.x + "," + this.y + ")");
        }
    }



    @Override
    public String getSymbol() {
        return "üêª";
    }

    public double getFoodCapacity() {
        return FOOD_CAPACITY;
    }

    public int getMaxCountPerCell() {
        return MAX_COUNT_PER_CELL;
    }

    public double getWeight() {
        return BASE_WEIGHT;
    }
    @Override
    public String getSpeciesName() {
        return "Bear";
    }

    @Override
    protected int getMaxSpeed() {
        return MAX_SPEED;
    }

    @Override
    protected double getReproductionChance() {
        return 0.1;
    }

}
